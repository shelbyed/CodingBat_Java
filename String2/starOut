/*

Return a version of the given string, where for every star (*) in the string the star 
and the chars immediately to its left and right are gone. So "ab*cd" yields "ad" and "ab**cd" also yields "ad".


starOut("ab*cd") → "ad"
starOut("ab**cd") → "ad"
starOut("sm*eilly") → "silly"
*/

public String starOut(String str) {
  int n = str.length();
  String result = "";
  
  for (int i = 0; i < n; i++) {
    if (i == 0 && str.charAt(i) != '*') {
      result += str.charAt(i);
    }
    if (i > 0 && str.charAt(i) != '*' && str.charAt(i - 1) != '*') {
    // for the condition where str.charAt(i) != '*' && str.charAt(i - 1) == '*'
    // since it's not covered here, the result will not be affected,
    // and i will just increment to the next one without changing the existing result.
    // Therefore, we don't need to write a condition for that scenario.
    // Think about "abc*de".
      result += str.charAt(i);
    }
    if (i > 0 && str.charAt(i) == '*' && str.charAt(i - 1) != '*') {
      result = result.substring(0, result.length() - 1);
    }
  }
  return result;
}
